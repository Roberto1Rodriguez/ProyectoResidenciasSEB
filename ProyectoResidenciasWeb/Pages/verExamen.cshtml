@page
@model ProyectoResidenciasWeb.Pages.verExamenModel
@{
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ver Examen</title>
    <link rel="stylesheet" href="/css/styles.css" />
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&family=Space+Grotesk:wght@300..700&family=Varela+Round&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">

</head>


<body class="detalles-ex-body">


    <header class="header">
        <img src="/images/logo_coah2.png" alt="Logo Izquierda" class="logo-izquierda">
        <div class="header-right">
            <img src="/images/logo_sedu.png" alt="Logo Derecha" class="logo-derecha">

        </div>
    </header>

    <div class="detalles-ex-conteiner">

        <h1>Detalles del Examen</h1>

        <div id="detalles-examen"></div>

        <div>
            <h2>Alumnos</h2>
            <button onclick="abrirConfirmacionModal()">Guardar Calificaciones</button>
        </div>
        
        <ul id="alumnos-list"></ul>
        <button id="volver" class="hidden" onclick="window.location.href='listaExamenes'">Volver</button>
        

    </div>

   

    <!-- Modal Confirmación -->
    <div id="confirmacion-modal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(0,0,0,0.5);">
        <div style="background-color:#fff; margin:10% auto; padding:20px; width:50%;">
            <h2>Confirmar Guardar Calificaciones</h2>
            <p>¿Está seguro de que desea guardar las calificaciones?</p>
            <button onclick="guardarCalificaciones()">Sí</button>
            <button onclick="cerrarConfirmacionModal()">No</button>
        </div>
    </div>

    <script>
        let alumnosData = [];

        document.addEventListener('DOMContentLoaded', async () => {
            const examenId = sessionStorage.getItem('examenId');
            const response = await fetch(`https://localhost:7162/api/Examen/examen/${examenId}`);
            const data = await response.json();

            const detallesExamen = document.getElementById('detalles-examen');
            detallesExamen.textContent = `Examen ID: ${data.examen.id}, Ubicación PDF: ${data.examen.ubicacionPdf}`;

            alumnosData = data.alumnos;
            const alumnosList = document.getElementById('alumnos-list');
            alumnosList.innerHTML = ''; // Clear any existing items
            alumnosData.forEach(alumno => {
                const listItem = document.createElement('li');
                listItem.innerHTML = `
                            <span>${alumno.alumno.nombre} - Calificación:
                            <input type="number" value="${alumno.calificacion || 0}" min="0" max="10" step="0.1" data-alumno-id="${alumno.alumno.id}">
                            </span>
                                                                <button onclick="descargarRespuestas(${alumno.alumno.id}, '${alumno.alumno.nombre}', ${examenId})" ${alumno.ubicacionRespuestasPDF ? '' : 'disabled'}>Ver Respuestas</button>

                                    
                        `;
                alumnosList.appendChild(listItem);
            });
        });

        function abrirConfirmacionModal() {
            document.getElementById('confirmacion-modal').style.display = 'block';
        }

        function cerrarConfirmacionModal() {
            document.getElementById('confirmacion-modal').style.display = 'none';
        }

        async function guardarCalificaciones() {
            const examenId = sessionStorage.getItem('examenId');
            const inputs = document.querySelectorAll('#alumnos-list input[type="number"]');

            for (const input of inputs) {
                const alumnoId = input.getAttribute('data-alumno-id');
                const calificacion = parseFloat(input.value) || 0;

                await fetch('https://localhost:7162/api/Examen/calificar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ ExamenId: examenId, AlumnoId: alumnoId, Calificacion: calificacion })
                });
            }

            cerrarConfirmacionModal();
            alert('Calificaciones guardadas exitosamente.');
        }


        async function descargarRespuestas(alumnoId, nombreAlumno,examenId) {
         
            const url = `https://localhost:7162/api/Examen/DescargarRespuestas?examenId=${examenId}&alumnoId=${alumnoId}`;

            try {
                const response = await fetch(url);
                if (!response.ok) {
                    throw new Error('Error al descargar las respuestas.');
                }

                const blob = await response.blob();
                const link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = `Respuestas_${nombreAlumno.replace(/\s+/g, '_')}_${examenId}.pdf`;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            } catch (error) {
                console.error('Error al descargar las respuestas:', error);
                alert('Error al descargar las respuestas.');
            }
        }
    </script>
</body>
</html>