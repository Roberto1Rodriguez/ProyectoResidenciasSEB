@page
@model ProyectoResidenciasWeb.Pages.AdministradorIndexModel
@{
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Página de Inicio de Sesión</title>
    <link rel="stylesheet" href="/css/styles.css" />

    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&family=Space+Grotesk:wght@300..700&family=Varela+Round&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">

    <style>
        .docente {
            display: flex;
            flex-direction: column;
            padding: 10px;
            border: 1px solid #ccc;
            margin: 5px 0;
            border-radius: 5px;
        }

        .columna {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .boton-examen {
            padding: 5px 10px;
            border-radius: 6px;
            border: 1px solid #70a0e6;
            background-color: #70a0e6;
            font-weight: 500;
            font-size: 1rem;
            cursor: pointer;
        }

        .examenes-container {
            max-height: 200px; /* Limita la altura del contenedor de exámenes */
            overflow-y: auto; /* Permite el scroll vertical */
            margin-top: 10px;
            background-color: #f9f9f9;
            padding: 5px;
            border-radius: 5px;
            display: none; /* Oculto por defecto */
        }

        .examen {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            border: 1px solid #ddd;
            margin: 5px 0;
            border-radius: 5px;
            background-color: #f7e4cb;
        }

        .examen-info {
            flex: 1;
        }

        .boton-descargar {
            padding: 5px 10px;
            border-radius: 6px;
            border: 1px solid #4CAF50;
            background-color: #4CAF50;
            color: white;
            font-weight: 500;
            cursor: pointer;
        }
    </style>
</head>
<body>

    <!-- Header con logos y botón de registro -->
    <header class="header">
        <img src="/images/logo_coah2.png" alt="Logo Izquierda" class="logo-izquierda">
        <div class="header-right">
            <img src="/images/logo_sedu.png" alt="Logo Derecha" class="logo-derecha">
        </div>
    </header>

    <div class="index-options">
        <div>
            <h3>
                Hola,<span>Belén Ruiz Almaguer</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-settings" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24V24H0z" fill="none" />
                    <path d="M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z" />
                    <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
                </svg>
            </h3>
            <label id="rol" class="instrucciones" style="font-size:large; color:gray;">Administrador</label>
        </div>
        <!--CONTEXT MENU CERRAR SESION-->
        <div id="contextMenu" class="context-menu">
            <ul>
                <li id="cambiar-contraseña">Cambiar contraseña</li>
                <li id="logout">Cerrar sesión</li>
            </ul>
        </div>
        <div class="index-options-btns">
            <button onclick="window.location.href='agregarDocente'" class="btn-agg-alumno" id="openModalBtn">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-mood-plus" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#7a9f37" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24V24H0z" fill="none" />
                    <path d="M20.985 12.528a9 9 0 1 0 -8.45 8.456" />
                    <path d="M16 19h6" />
                    <path d="M19 16v6" />
                    <path d="M9 10h.01" />
                    <path d="M15 10h.01" />
                    <path d="M9.5 15c.658 .64 1.56 1 2.5 1s1.842 -.36 2.5 -1" />
                </svg>Agregar Docente
            </button>

            <button onclick="window.location.href='FiltroBancoReactivos' " class="btn-examenlist">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-list-check" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#4a6a99" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24V24H0z" fill="none" />
                    <path d="M3.5 5.5l1.5 1.5l2.5 -2.5" />
                    <path d="M3.5 11.5l1.5 1.5l2.5 -2.5" />
                    <path d="M3.5 17.5l1.5 1.5l2.5 -2.5" />
                    <path d="M11 6l9 0" />
                    <path d="M11 12l9 0" />
                    <path d="M11 18l9 0" />
                </svg>Banco de reactivos
            </button>
        </div>
    </div>

    <div class="main-container-admin-index">
        <div class="form-container-admin-index">
            <h1>Lista de docentes</h1>
            <ul id="docentes-list"></ul>
            <button id="volver" class="hidden">Volver</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                const response = await fetch('https://localhost:7162/api/Docente/docentes');
                const data = await response.json();
                const docentesList = document.getElementById('docentes-list');

                data.forEach(docente => {
                    const listItem = document.createElement('li');
                    listItem.classList.add('docente');
                    listItem.innerHTML = `
                                <div class="columna">
                                    <h3>${docente.nombre} - ${docente.usuario.nombreUsuario}</h3>
                                    <button class="boton-examen" onclick="toggleExamenes(${docente.id}, this)">Ver Exámenes</button>
                                </div>
                                <div id="examenes-${docente.id}" class="examenes-container"></div>
                            `;
                    docentesList.appendChild(listItem);
                });
            } catch (error) {
                console.error('Error al cargar la lista de docentes:', error);
            }
        });

        async function toggleExamenes(docenteId, button) {
            const examenesContainer = document.getElementById(`examenes-${docenteId}`);

            if (examenesContainer.style.display === 'none' || examenesContainer.style.display === '') {
                // Mostrar exámenes
                await cargarExamenes(docenteId, examenesContainer);
                examenesContainer.style.display = 'block';
                button.textContent = 'Ocultar Exámenes';
            } else {
                // Ocultar exámenes
                examenesContainer.style.display = 'none';
                button.textContent = 'Ver Exámenes';
            }
        }

        async function cargarExamenes(docenteId, container) {
            try {
                const response = await fetch(`https://localhost:7162/api/Examen/examenesPorDocente/${docenteId}`);
                const examenes = await response.json();
                container.innerHTML = ''; // Limpiar lista de exámenes previos

                examenes.forEach(examen => {
                    const listItem = document.createElement('div');
                    listItem.classList.add('examen');
                    listItem.innerHTML = `
                                <div class="examen-info">
                                    <h4>Examen ID: ${examen.id}</h4>
                                    <p>Asignatura: ${examen.asignatura}</p>
                                    <p>Campo Formativo: ${examen.campoFormativo}</p>
                                    <p>Nivel Educativo: ${examen.nivelEducativo}</p>
                                    <p>Fecha: ${examen.fecha}</p>
                                </div>
                                <button class="boton-descargar" onclick="descargarExamen(${examen.id})">Descargar</button>
                            `;
                    container.appendChild(listItem);
                });
            } catch (error) {
                console.error('Error al cargar los exámenes del docente:', error);
            }
        }

        function descargarExamen(examenId) {
            window.location.href = `https://localhost:7162/api/Examen/DescargarExamen?examenId=${examenId}`;
        }
    </script>

</body>
</html>