@page
@model ProyectoResidenciasWeb.Pages.FiltroBancoReactivosModel
@{
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Página de Inicio de Sesión</title>
    <link rel="stylesheet" href="/css/styles.css" />
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&family=Space+Grotesk:wght@300..700&family=Varela+Round&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">
</head>
<body>




    <!-- Header con logos y botón de registro -->


    <header class="header">
        <img src="/images/logo_coah.png" alt="Logo Izquierda" class="logo-izquierda">
        <label>Generador de pruebas escritas.</label>
        <div class="header-right">
            <img src="/images/logo_sedu4.png" alt="Logo Derecha" class="logo-derecha">

        </div>


    </header>

    <!--BUENO-->

    <div class="index-options">
        <div>
            <h3>
                Administrador<span id="nombre-perfil"></span><svg id="settingsIcon" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-settings" width="25" height="25" viewBox="0 0 24 24" stroke-width="1.5" stroke="#000000" fill="none" stroke-linecap="round" stroke-linejoin="round">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z" />
                    <path d="M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" />
                </svg>
            </h3>
            @*  <label id="rol" class="instrucciones" style="font-size:large; font-weight: normal;
            color: gray;
            font-family: 'Quicksand' ; ">Administrador</label> *@
        </div>



        <!---------------------------------------->
        <!-- Modal cambiar contraseña -->

        <div id="cambiarContrasenaModal" class="modal">

            <div class="modal-content">
                <span class="close">&times;</span>
                <h2>Cambiar Contraseña</h2>

                <form id="cambiarContrasenaForm">
                    <div class="input-group">
                        <input type="password" id="current-password" required placeholder=" ">
                        <label for="current-password">Contraseña Actual</label>
                    </div>
                    <div class="input-group">
                        <input type="password" id="new-password" required placeholder=" ">
                        <label for="new-password">Nueva Contraseña</label>
                    </div>
                    <div class="input-group">
                        <input type="password" id="confirm-new-password" required placeholder=" ">
                        <label for="confirm-new-password">Confirmar Nueva Contraseña</label>
                    </div>
                    <button type="submit">Guardar</button>
                </form>

            </div>

        </div>

        <div id="contextMenu" class="context-menu">
            <ul>
                <li id="cambiar-contraseña">Cambiar contraseña</li>
                <li id="logout">Cerrar sesión</li>
            </ul>
        </div>


        <div class="index-options-btns">

            <button onclick="window.location.href='AdministradorIndex'">
                Inicio
            </button>

            <button onclick="window.location.href='agregarDocente'" class="btn-agg-alumno" id="openModalBtn">
                Agregar Docente
            </button>

            <button onclick="window.location.href='FiltroBancoReactivos' " class="btn-examenlist">
                Banco de reactivos
            </button>
        </div>
    </div>



        <div class="main-container-index-admin">
        <div class="form-container-index-admin">
            <!-- Solo mostrar botones de nivel educativo para el administrador -->
            <div id="nivel-educativo" class="btn-nivel-edu">
                <label>Selecciona el nivel educativo.</label>
                <div>
                    <button id="primaria-btn" class="sty-primaria">Primaria</button>
                    <button id="secundaria-btn" class="sty-secundaria">Secundaria</button>
                </div>
            </div>

            <div id="contenedor" class="row hidden">
                <label>Selecciona el tipo de examen</label>
                <div class="tipo-ex-conteiner">
                    <div id="campos-formativos" class="column hidden">
                        <h2 class="hidden">Campos Formativos</h2>
                        <ul id="campos-formativos-list"></ul>
                    </div>
                    <div id="asignaturas" class="column hidden">
                        <h2 class="hidden">Asignaturas</h2>
                        <ul id="asignaturas-list"></ul>
                    </div>
                </div>
            </div>

            <button id="volver" class="hidden">Volver</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const nombrePerfil = sessionStorage.getItem('nombre');
            if (nombrePerfil) {
                document.getElementById('nombre-perfil').textContent = nombrePerfil;
            }

            const usuarioId = sessionStorage.getItem('usuarioId');
            const tipoUsuario = sessionStorage.getItem('tipoUsuario');

            // Verificar si el usuario es administrador y omitir los campos innecesarios
            if (tipoUsuario === 'M') {  // 'M' es el tipo para Administrador
                // Ocultar los campos de nombre de escuela, turno, grado y sección (ya no son necesarios en HTML)
            }

            if (!usuarioId && (tipoUsuario !== 'D' || tipoUsuario !== 'M')) {
                window.location.href = 'login';
            }
        });

        // Event listener para los botones de nivel educativo
        document.getElementById('primaria-btn').addEventListener('click', mostrarCamposFormativos);
        document.getElementById('secundaria-btn').addEventListener('click', mostrarCamposFormativos);

        // Función para mostrar los campos formativos y asignaturas
        function mostrarCamposFormativos() {
            document.getElementById('nivel-educativo').classList.add('hidden');
            document.getElementById('volver').classList.remove('hidden');

            // Obtener el nivel educativo seleccionado
            const nivelEducativo = this.textContent;

            // Guardar el nivel educativo seleccionado en sessionStorage
            sessionStorage.setItem('nivelEducativo', nivelEducativo);

            // Mostrar los campos formativos y asignaturas sin necesidad de otros datos para administradores
            cargarCamposFormativos(nivelEducativo);
            cargarAsignaturas(nivelEducativo);
        }

        function cargarCamposFormativos(nivelEducativo) {
            fetch(`https://residenciassebapi.sistemas19.com/api/campoformativo`)
                .then(response => response.json())
                .then(camposFormativos => {
                    const camposFormativosList = document.getElementById('campos-formativos-list');
                    camposFormativosList.innerHTML = '';
                    camposFormativos.forEach(camposFormativo => {
                        const listItem = document.createElement('li');
                        listItem.textContent = camposFormativo.nombre;
                        listItem.addEventListener('click', () => seleccionarCampoFormativo(camposFormativo.id, camposFormativo.nombre));
                        camposFormativosList.appendChild(listItem);
                    });

                    document.getElementById('campos-formativos').classList.remove('hidden');
                    document.querySelector('#campos-formativos h2').classList.remove('hidden');
                    document.getElementById('contenedor').classList.remove('hidden');
                })
                .catch(error => {
                    console.error('Error al obtener los campos formativos:', error);
                });
        }

        function cargarAsignaturas(nivelEducativo) {
            fetch(`https://residenciassebapi.sistemas19.com/api/asignatura/ByNivel?nivel=${nivelEducativo}`)
                .then(response => response.json())
                .then(asignaturas => {
                    const asignaturasList = document.getElementById('asignaturas-list');
                    asignaturasList.innerHTML = '';
                    asignaturas.forEach(asignatura => {
                        const listItem = document.createElement('li');
                        listItem.textContent = asignatura.nombre;
                        listItem.addEventListener('click', () => seleccionarAsignatura(asignatura.id, asignatura.nombre));
                        asignaturasList.appendChild(listItem);
                    });

                    document.getElementById('asignaturas').classList.remove('hidden');
                    document.querySelector('#asignaturas h2').classList.remove('hidden');
                })
                .catch(error => {
                    console.error('Error al obtener las asignaturas:', error);
                });
        }

        function seleccionarCampoFormativo(campoFormativoId, campoFormativoNombre) {
            sessionStorage.setItem('campoFormativoId', campoFormativoId);
            sessionStorage.setItem('tipo', 'campoFormativo');
            sessionStorage.setItem('campoFormativoNombre', campoFormativoNombre);
            window.location.href = 'PreguntasAdministrador';
        }

        function seleccionarAsignatura(asignaturaId, asignaturaNombre) {
            sessionStorage.setItem('asignaturaId', asignaturaId);
            sessionStorage.setItem('tipo', 'asignatura');
            sessionStorage.setItem('asignaturaNombre', asignaturaNombre);
            window.location.href = 'PreguntasAdministrador';
        }

        // Función para volver a la selección del nivel educativo
        function volverInicio() {
            document.getElementById('campos-formativos').classList.add('hidden');
            document.getElementById('asignaturas').classList.add('hidden');
            document.getElementById('volver').classList.add('hidden');
            document.getElementById('contenedor').classList.add('hidden');
            document.getElementById('nivel-educativo').classList.remove('hidden');
        }
    </script>

    <script src="/js/script.js"></script>
</body>
</html>